apiVersion: v1
kind: Namespace
metadata:
  name: stack-mini
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: stack-mini
stringData:
  POSTGRES_PASSWORD: supersecret
  POSTGRES_DB: appdb
  POSTGRES_USER: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: stack-mini
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_DB } }
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_USER } }
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            requests: { cpu: 100m, memory: 128Mi }
            limits:   { cpu: 500m, memory: 512Mi }
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: stack-mini
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stack-mini-api
  namespace: stack-mini
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stack-mini-api
  template:
    metadata:
      labels:
        app: stack-mini-api
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
        - name: wait-for-db
          image: postgres:16-alpine
          command: ['sh','-c','until pg_isready -h postgres.stack-mini.svc.cluster.local -p 5432 -U postgres; do echo waiting for db; sleep 1; done']
      containers:
        - name: api
          image: ghcr.io/kamil010mughal/stack-mini:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: postgres.stack-mini.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_USER } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_PASSWORD } }
            - name: DB_NAME
              valueFrom: { secretKeyRef: { name: db-secret, key: POSTGRES_DB } }
          readinessProbe:
            httpGet: { path: /, port: 8080 }   # <- /health ki jagah /
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: /, port: 8080 }   # <- /health ki jagah /
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests: { cpu: 100m, memory: 128Mi }
            limits:   { cpu: 500m, memory: 512Mi }
---
apiVersion: v1
kind: Service
metadata:
  name: stack-mini-api
  namespace: stack-mini
spec:
  selector:
    app: stack-mini-api
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stack-mini-ing
  namespace: stack-mini
spec:
  ingressClassName: traefik
  rules:
    - host: app.127.0.0.1.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: stack-mini-api
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: stack-mini-hpa
  namespace: stack-mini
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: stack-mini-api
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
